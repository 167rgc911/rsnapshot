rsnapshot 1.2.0
http://www.rsnapshot.org/

------------------------------------------------------------------------------
rsnapshot comes with ABSOLUTELY NO WARRANTY.  This is free software,
and you are welcome to redistribute it under certain conditions.
See the GNU General Public Licence for details.

For installation or upgrade instructions, read INSTALL
------------------------------------------------------------------------------

rsnapshot is a filesystem snapshot utility based on rsync.

rsnapshot makes it easy to make periodic snapshots of local machines,
and remote machines over ssh. The code makes extensive use of hard links
whenever possible, to greatly reduce the disk space required.

It is written entirely in perl with no module dependencies, and has been
tested with versions 5.004 through 5.8.2.

This program should work on any reasonably modern UNIX compatible OS. It
has been tested successfully on the following operating systems:
 - Debian: 3.0 (woody), 3.1 (sarge), unstable (sid)
 - Redhat: 7.x, 8.0, Enterprise Linux 3.0 ES
 - CentOS 3.0
 - WhiteBox Enterprise Linux 3.0
 - Slackware 9.0
 - SuSE: 9.0
 - Fedora Core 1
 - FreeBSD 4.9-STABLE
 - OpenBSD 3.x
 - Solaris 8 (SPARC and x86)
 - Mac OS X
 - IRIX 6.5

If this is your first experience with rsnapshot, you may want to read the
rsnapshot HOWTO at http://www.rsnapshot.org/

The HOWTO will give you a detailed walk-through on how to get rsnapshot up and
running in explicit detail. For a reference of all available commands, see the
rsnapshot man page.

If you are upgrading from version 1.1.6 or earlier, make sure you read the
section on upgrading in the INSTALL file.

------------------------------------------------------------------------------
COMPATIBILITY NOTICE (Please read)
------------------------------------------------------------------------------
  If you have rsync version 2.5.7 or later, you may want to enable the
  link_dest parameter in the rsnapshot.conf file. This will allow you to handle
  any type of file on any operating system.
  
  If you do not have rsync 2.5.7 or newer, but you are running Linux, be sure
  and enable the cmd_cp parameter in rsnapshot.conf.
  
  These options are both off by default for maximum compatibility. However, if
  you enable one of them you will be able to back up your entire system, not
  just most of it.
  
  When running rsnapshot on a system without either of these two options
  enabled, special files will not be rotated in the snapshots properly. More
  specifically, FIFOs, sockets, block and character devices will not be
  supported. This is because there is no clean cross-platform way to
  accomplish this in Perl (and if you know how, please let me know).
  
  Be advised that currently link_dest doesn't do well with unavailable hosts.
  Specifically, if a remote host is unavailable using link_dest, there will
  be no latest backup of that machine, and a full re-sync will be required
  when it becomes available. Using the other methods, the last good snapshot
  will be preserved, preventing the need for a re-sync. We hope to streamline
  this in the future.
------------------------------------------------------------------------------

Once you have installed rsnapshot, you will need to configure it.
The default configuration file is /etc/rsnapshot.conf, although the exact path
may be different depending on how the program was installed. If this
file does not exist, copy /etc/rsnapshot.conf.default over to
/etc/rsnapshot.conf and edit it to suit your tastes. See the man page for
the full list of configuration options.

When /etc/rsnapshot.conf contains your chosen settings, do a quick sanity
check to make sure everything is ready to go:

    rsnapshot configtest

If this works, you can see essentially what will happen when you run it for
real by executing the following command (where interval is hourly, daily, etc):

    rsnapshot -t [interval]

Once you are happy with everything, the final step is to setup a cron job to
automate your backups. Here is a quick example which makes backups every four
hours, and daily backups for a week:
    
    0 */4 * * *     /usr/local/bin/rsnapshot hourly
    50 23 * * *     /usr/local/bin/rsnapshot daily
    
In the previous example, there will be six "hourly" snapshots
taken each day (at 0,4,8,12,16, and 20 hours). There will also
be daily snapshots taken every night at 11:50PM. The number of
snapshots that are saved depends on the "interval" settings in
/etc/rsnapshot.conf.

For example:
    
    interval    hourly    6
    
This means that every time "rsnapshot hourly" is run, it will make a
new snapshot, rotate the old ones, and retain the most recent six
(hourly.0 - hourly.5).

For the full documentation, type "man rsnapshot" once it is installed,
or visit http://www.rsnapshot.org/

If you plan on using the "backup_script" parameter in your backup scheme,
take a look at the utils/ directory in the source distribution for several
example scripts.

------------------------------------------------------------------------------
AUTHORS
------------------------------------------------------------------------------

Please see the AUTHORS file for the complete list of contributors.

